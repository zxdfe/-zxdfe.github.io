import{_ as s,c as a,o as i,a4 as t}from"./chunks/framework.Mj8dOX4M.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"2024/algorithms/344. 反转字符串.md","filePath":"2024/algorithms/344. 反转字符串.md"}'),e={name:"2024/algorithms/344. 反转字符串.md"},n=t(`<h2 id="leetcode" tabindex="-1">LeetCode <a class="header-anchor" href="#leetcode" aria-label="Permalink to &quot;LeetCode&quot;">​</a></h2><blockquote><p><a href="https://leetcode.cn/problems/reverse-string/description/" target="_blank" rel="noreferrer">344. 反转字符串</a></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2024/png/302528/1713551754257-5a837732-00f6-4cd4-8ad7-60c01e0a3efb.png#averageHue=%23dddddd&amp;clientId=u69ada920-94c6-4&amp;from=paste&amp;height=563&amp;id=u7a22d456&amp;originHeight=1126&amp;originWidth=1492&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=156694&amp;status=done&amp;style=none&amp;taskId=u7645f1c1-4355-425b-8e4b-a6ab44dc5c2&amp;title=&amp;width=746" alt="image.png"></p><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><p><img src="https://cdn.nlark.com/yuque/0/2024/png/302528/1713552188596-dd97cc90-2c7b-49d0-b2aa-b9952f1eaf6f.png#averageHue=%23cfd0d4&amp;clientId=uacc0e5cb-c95b-4&amp;from=paste&amp;height=373&amp;id=u13b1f79e&amp;originHeight=746&amp;originWidth=1422&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=118056&amp;status=done&amp;style=none&amp;taskId=u92e03911-1062-4fca-9bb3-ef981237a41&amp;title=&amp;width=711" alt="image.png"></p><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reverseString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> left </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> right </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (left </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> right) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 交换两个元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [s[left], s[right]] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [s[right], s[left]];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        left</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        right</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div>`,7),p=[n];function h(l,k,r,d,o,c){return i(),a("div",null,p)}const m=s(e,[["render",h]]);export{E as __pageData,m as default};
