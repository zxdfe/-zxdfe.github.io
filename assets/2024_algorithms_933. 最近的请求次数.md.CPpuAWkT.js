import{_ as s,c as a,o as i,a4 as t}from"./chunks/framework.Mj8dOX4M.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"2024/algorithms/933. 最近的请求次数.md","filePath":"2024/algorithms/933. 最近的请求次数.md"}'),e={name:"2024/algorithms/933. 最近的请求次数.md"},n=t(`<h2 id="leetcode" tabindex="-1">LeetCode <a class="header-anchor" href="#leetcode" aria-label="Permalink to &quot;LeetCode&quot;">​</a></h2><blockquote><p><a href="https://leetcode.cn/problems/number-of-recent-calls/description/" target="_blank" rel="noreferrer">933. 最近的请求次数</a></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2024/png/302528/1713609350907-9e968412-bf18-4331-9597-fd8852f028ec.png#averageHue=%23dedede&amp;clientId=u8af54603-8a00-4&amp;from=paste&amp;height=659&amp;id=u736c3b48&amp;originHeight=1318&amp;originWidth=1658&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=270767&amp;status=done&amp;style=none&amp;taskId=u5d9ab975-a83e-4f8b-9077-0b6d6a2c52d&amp;title=&amp;width=829" alt="image.png"></p><h2 id="思路" tabindex="-1">思路 <a class="header-anchor" href="#思路" aria-label="Permalink to &quot;思路&quot;">​</a></h2><ul><li>先进先出，队列结构</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2024/png/302528/1713609565667-230740e7-e2e0-4d27-aded-f77c6f6edaba.png#averageHue=%23f1f1f0&amp;clientId=u8af54603-8a00-4&amp;from=paste&amp;height=288&amp;id=ua5775f0d&amp;originHeight=576&amp;originWidth=2050&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=467533&amp;status=done&amp;style=none&amp;taskId=u5248dd8b-f639-46d8-b254-40f23e2687a&amp;title=&amp;width=1025" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/302528/1713609628340-0b752c7d-58d3-4c1e-89e2-e586605ce938.png#averageHue=%23f2f2f1&amp;clientId=u8af54603-8a00-4&amp;from=paste&amp;height=299&amp;id=u19e437f5&amp;originHeight=598&amp;originWidth=2076&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=480591&amp;status=done&amp;style=none&amp;taskId=u9948ea03-d5eb-4ba1-b489-15dd7e8d97a&amp;title=&amp;width=1038" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2024/png/302528/1713609780899-cf7f4687-c82b-4f14-be80-30bc96da049e.png#averageHue=%23d4d4d4&amp;clientId=u8af54603-8a00-4&amp;from=paste&amp;height=406&amp;id=uc97577ed&amp;originHeight=812&amp;originWidth=1772&amp;originalType=binary&amp;ratio=2&amp;rotation=0&amp;showTitle=false&amp;size=169275&amp;status=done&amp;style=none&amp;taskId=u4a805b18-4ff2-4d87-b83f-afc3279230a&amp;title=&amp;width=886" alt="image.png"></p><h2 id="题解" tabindex="-1">题解 <a class="header-anchor" href="#题解" aria-label="Permalink to &quot;题解&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RecentCounter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  queue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 维护一个队列</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.queue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.queue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // [t-3000, t]  左边是闭区间，是包括t-3000的，这里写 &lt; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.queue[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.queue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shift</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.queue.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,8),p=[n];function h(l,k,r,d,g,o){return i(),a("div",null,p)}const c=s(e,[["render",h]]);export{E as __pageData,c as default};
